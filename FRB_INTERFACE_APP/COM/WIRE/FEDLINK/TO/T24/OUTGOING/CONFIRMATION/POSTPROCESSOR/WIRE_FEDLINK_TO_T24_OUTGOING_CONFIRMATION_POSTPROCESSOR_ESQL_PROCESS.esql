BROKER SCHEMA COM.WIRE.FEDLINK.TO.T24.OUTGOING.CONFIRMATION.POSTPROCESSOR
PATH BANCO_UTILITIES;

DECLARE ns NAMESPACE 'http://www.temenos.com/T24/OFSML/140';
DECLARE CACHE SHARED ROW;
DECLARE SUCCESS_CODE EXTERNAL INTEGER 1009 ;
DECLARE FAIL_CODE EXTERNAL INTEGER 1010;


CREATE PROCEDURE INITIALIZECACHE( )
BEGIN
	IF CACHE.WIRECODES.WireCode IS NULL THEN
		SET CACHE.WIRECODES[]= SELECT A.WireCode , A.Description  FROM Database.dbo.FEDWireTags AS A;
	END IF;
	
	IF CACHE.PROPERTIES.Property IS NULL THEN
		SET CACHE.PROPERTIES[]= SELECT A.Property , A.Value  FROM Database.dbo.FEDProperties AS A;
	END IF ;
	
	IF CACHE.STATUSCODES.ID IS NULL THEN
		SET CACHE.STATUSCODES[]= SELECT A.ID , A.Status, A.Description  FROM Database.dbo.FEDStatusCodes AS A;
	END IF ;
	
END;


CREATE COMPUTE MODULE WIRE_FEDLINK_TO_T24_OUTGOING_CONFIRMATION_POSTPROCESSOR_ESQL_PROCESS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE RESPONSE_STRING, REFERENCE_ID,T24_XML_MESSAGE,TRANSACTION_UUID CHARACTER;
		DECLARE T24_XML_BLOB,TRANSACTION_UUID_BLOB BLOB ;
		DECLARE STATUS_SUCCESS , DESCRIPTION_SUCCESS , STATUS_FAILURE , DESCRIPTION_FAILURE CHARACTER;
		DECLARE TRANSACTION_IDS ROW;
	
		
		CALL INITIALIZECACHE();
		CALL GET_STATUS_CODE_DESCRIPTION(CACHE.STATUSCODES[1],SUCCESS_CODE,STATUS_SUCCESS,DESCRIPTION_SUCCESS);
		CALL GET_STATUS_CODE_DESCRIPTION(CACHE.STATUSCODES[1],FAIL_CODE,STATUS_FAILURE,DESCRIPTION_FAILURE);
		
		
		/*
		SET STATUS_SUCCESS = 'T24 CONF POST SUCCESSFUL';
		SET DESCRIPTION_SUCCESS = 'SUCCESSFUL RESPONSE RECEIVED FOR OUTGOING WIRE CONFIRMATION FROM T24';
		SET STATUS_FAILURE = 'T24 CONF POST FAILED' ;
		SET DESCRIPTION_FAILURE = 'FAILURE RESPONSE RECEIVED FOR OUTGOING WIRE CONFIRMATION FROM T24';
		*/
		
		SET T24_XML_BLOB=ASBITSTREAM(InputRoot.XMLNSC.ns:T24,InputRoot.Properties.Encoding,
										 InputRoot.Properties.CodedCharSetId,'','','',FolderBitStream);
		SET T24_XML_MESSAGE = CAST (T24_XML_BLOB AS CHAR CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.MQMD.Encoding);
		
		
		SET RESPONSE_STRING = InputRoot.XMLNSC.ns:T24.ns:serviceResponse.ns:ofsStandardRoutine;
		
		SET REFERENCE_ID = '';
		
		IF LENGTH(RESPONSE_STRING) > 0 THEN 
			SET REFERENCE_ID = SUBSTRING (RESPONSE_STRING BEFORE '*');
		END IF ;
		
		
		SET TRANSACTION_IDS.TRANSACTION  = THE (SELECT A.ID  FROM Database.dbo.FEDOrigWire AS A WHERE A.ReferenceID = REFERENCE_ID);
		SET TRANSACTION_UUID_BLOB =  TRANSACTION_IDS.TRANSACTION[1].ID ;   
			
		IF TRANSACTION_UUID_BLOB IS NOT NULL THEN
			
		-- when the record is found in database 
			IF CONTAINS(RESPONSE_STRING,'*UPDATED') THEN
				UPDATE Database.dbo.FEDOrigWire AS SP SET T24XMLMessage =T24_XML_MESSAGE, Status = STATUS_SUCCESS , Description = DESCRIPTION_SUCCESS WHERE SP.ID = TRANSACTION_UUID_BLOB ;
			ELSE
				 UPDATE Database.dbo.FEDOrigWire AS SP SET T24XMLMessage =T24_XML_MESSAGE, Status = STATUS_FAILURE , Description = DESCRIPTION_FAILURE WHERE SP.ID = TRANSACTION_UUID_BLOB ;
			END IF ;
			
			
		ELSE 
			-- rare scenario to happen 
			SET TRANSACTION_UUID=UUIDASCHAR;
			INSERT INTO Database.dbo.FEDExceptions (ID,Message,Reason,DateCreated) VALUES (TRANSACTION_UUID,T24_XML_MESSAGE,'Confirmation Message Response received from T24 doesnt match to any outgoing wires',CAST(CURRENT_TIMESTAMP as TIMESTAMP));
			
			
		END IF ;
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
