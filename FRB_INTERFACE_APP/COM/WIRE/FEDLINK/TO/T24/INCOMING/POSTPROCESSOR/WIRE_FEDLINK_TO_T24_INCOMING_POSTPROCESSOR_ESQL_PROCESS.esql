BROKER SCHEMA COM.WIRE.FEDLINK.TO.T24.INCOMING.POSTPROCESSOR
PATH BANCO_UTILITIES;

DECLARE ns100 NAMESPACE 'http://www.temenos.com/T24/OFSML/140';

DECLARE CACHE SHARED ROW;
DECLARE SUCCESS_CODE EXTERNAL INTEGER 2005;

CREATE PROCEDURE INITIALIZECACHE( )
BEGIN
	IF CACHE.WIRECODES.WireCode IS NULL THEN
		SET CACHE.WIRECODES[]= SELECT A.WireCode , A.Description  FROM Database.dbo.FEDWireTags AS A;
	END IF;
	
	IF CACHE.PROPERTIES.Property IS NULL THEN
		SET CACHE.PROPERTIES[]= SELECT A.Property , A.Value  FROM Database.dbo.FEDProperties AS A;
	END IF ;
	
	IF CACHE.STATUSCODES.ID IS NULL THEN
		SET CACHE.STATUSCODES[]= SELECT A.ID , A.Status, A.Description  FROM Database.dbo.FEDStatusCodes AS A;
	END IF ;
	
END;



CREATE COMPUTE MODULE WIRE_FEDLINK_TO_T24_INCOMING_POSTPROCESSOR_ESQL_PROCESS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE REFERENCE_ID,STATUS_SUCCESS,DESCRIPTION_SUCCESS,T24_XML_MESSAGE,T24_REPROCESS_XML_MESSAGE,IMAD,OMAD CHARACTER ;
		DECLARE TRANSACTION_UUID CHARACTER; 
		DECLARE T24_XML_BLOB,T24_REPROCESS_XML_BLOB BLOB;
		DECLARE TRANSACTION_IDS ROW ;
		DECLARE TRANSACTION_ID_BLOB BLOB;
		DECLARE  IMAD_REF , OMAD_REF ROW;
		
		CALL INITIALIZECACHE();
		CALL GET_STATUS_CODE_DESCRIPTION(CACHE.STATUSCODES[1],SUCCESS_CODE,STATUS_SUCCESS,DESCRIPTION_SUCCESS);
		
		
		/*
		SET STATUS_SUCCESS ='SUCCESSFULLY UPDATED IN T24';
		SET DESCRIPTION_SUCCESS = 'INCOMING WIRE IS UPDATED SUCCESSFULLY IN T24';
		*/
	
		SET T24_XML_BLOB = ASBITSTREAM(InputRoot.XMLNSC.ns100:T24,InputRoot.Properties.Encoding,
									  InputRoot.Properties.CodedCharSetId,'','','',FolderBitStream);
		SET T24_XML_MESSAGE = CAST (T24_XML_BLOB AS CHAR CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.MQMD.Encoding);
		
		
		IF EXISTS(InputRoot.XMLNSC.ns100:T24.ns100:serviceResponse.ns100:ofsTransactionProcessed[]) THEN 
			-- valid response received in the first go and update the database record 
			SET REFERENCE_ID = InputRoot.XMLNSC.ns100:T24.ns100:serviceResponse.ns100:ofsTransactionProcessed.ns100:transactionId ;
			SET IMAD_REF.IMADS[] = SELECT C FROM InputRoot.XMLNSC.ns100:T24.ns100:serviceResponse.ns100:ofsTransactionProcessed.ns100:field[]  AS C WHERE C.name='IMAD.REFERENCE' ;
			SET OMAD_REF.OMADS[] = SELECT C FROM InputRoot.XMLNSC.ns100:T24.ns100:serviceResponse.ns100:ofsTransactionProcessed.ns100:field[]  AS C WHERE C.name='OMAD.REFERENCE';	
			SET IMAD = IMAD_REF.IMADS[1];
			SET OMAD = OMAD_REF.OMADS[1];
		
			SET TRANSACTION_IDS.TRANSACTION  = THE (SELECT A.ID  FROM Database.dbo.FEDAdvice AS A WHERE A.IMAD = IMAD AND A.OMAD = OMAD AND A.DuplicateWireFlag = FALSE);
			SET TRANSACTION_ID_BLOB = TRANSACTION_IDS.TRANSACTION[1].ID;
				
			IF TRANSACTION_ID_BLOB IS NOT NULL THEN
				UPDATE Database.dbo.FEDAdvice AS SP SET ReferenceID=REFERENCE_ID, T24ConfirmXMLMessage= T24_XML_MESSAGE , Status = STATUS_SUCCESS , Description = DESCRIPTION_SUCCESS WHERE SP.ID = TRANSACTION_ID_BLOB;
				
			ELSE
				-- rare condition to be filed in exceptions table 
				SET TRANSACTION_UUID = UUIDASCHAR;
				INSERT INTO Database.dbo.FEDExceptions (ID,Message,Reason,DateCreated )
				 VALUES (TRANSACTION_UUID,T24_XML_MESSAGE,'Incoming Wire Response received from T24 couldnt be matched in database',CAST(CURRENT_TIMESTAMP as TIMESTAMP) );
				
				/*
				below code is added to fix the scenario where ofsTransactionProcessed is received but IMAD and OMAD isnt received
				*/
				DECLARE USER,APPLICATION,VERSION CHARACTER;
				CALL GET_FED_PROPERTY_VALUE(CACHE.PROPERTIES[1],'T24_SERVICE_REQUEST_OFS_TRAN_SEE_USER',USER);
				CALL GET_FED_PROPERTY_VALUE(CACHE.PROPERTIES[1],'T24_SERVICE_REQUEST_OFS_TRAN_SEE_APPLICATION',APPLICATION);
				CALL GET_FED_PROPERTY_VALUE(CACHE.PROPERTIES[1],'T24_SERVICE_REQUEST_OFS_TRAN_SEE_VERSION',VERSION);
		
				SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:securityContext.ns100:userName=USER;
				SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:ofsTransactionSee.(XMLNSC.Attribute)application=APPLICATION;
				SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:ofsTransactionSee.(XMLNSC.Attribute)version=VERSION;
				SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:ofsTransactionSee.ns100:transactionId=REFERENCE_ID;
			
			
				SET T24_REPROCESS_XML_BLOB = ASBITSTREAM(OutputRoot.XMLNSC.ns100:T24,OutputRoot.Properties.Encoding,
									  OutputRoot.Properties.CodedCharSetId,'','','',FolderBitStream);
				SET T24_REPROCESS_XML_MESSAGE = CAST (T24_REPROCESS_XML_BLOB AS CHAR CCSID OutputRoot.Properties.CodedCharSetId ENCODING OutputRoot.MQMD.Encoding);
				SET TRANSACTION_UUID = UUIDASCHAR;
				INSERT INTO Database.dbo.FEDExceptions (ID,Message,Reason,DateCreated ) VALUES (TRANSACTION_UUID,T24_REPROCESS_XML_MESSAGE,'As FUNDSTransfer is not existing in the T24 response resubmitting new request to T24',CAST(CURRENT_TIMESTAMP as TIMESTAMP));
				PROPAGATE TO TERMINAL 'out';
			END IF ;
				
		ELSE
			DECLARE USER,APPLICATION,VERSION CHARACTER;
			CALL GET_FED_PROPERTY_VALUE(CACHE.PROPERTIES[1],'T24_SERVICE_REQUEST_OFS_TRAN_SEE_USER',USER);
			CALL GET_FED_PROPERTY_VALUE(CACHE.PROPERTIES[1],'T24_SERVICE_REQUEST_OFS_TRAN_SEE_APPLICATION',APPLICATION);
			CALL GET_FED_PROPERTY_VALUE(CACHE.PROPERTIES[1],'T24_SERVICE_REQUEST_OFS_TRAN_SEE_VERSION',VERSION);
		
			
			SET REFERENCE_ID = InputRoot.XMLNSC.ns100:T24.ns100:serviceResponse.ns100:ofsTransactionFailed.ns100:transactionId;
			SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:securityContext.ns100:userName=USER;
			SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:ofsTransactionSee.(XMLNSC.Attribute)application=APPLICATION;
			SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:ofsTransactionSee.(XMLNSC.Attribute)version=VERSION;
			SET OutputRoot.XMLNSC.ns100:T24.ns100:serviceRequest.ns100:ofsTransactionSee.ns100:transactionId=REFERENCE_ID;
			
			
			SET T24_REPROCESS_XML_BLOB = ASBITSTREAM(OutputRoot.XMLNSC.ns100:T24,OutputRoot.Properties.Encoding,
									  OutputRoot.Properties.CodedCharSetId,'','','',FolderBitStream);
			SET T24_REPROCESS_XML_MESSAGE = CAST (T24_REPROCESS_XML_BLOB AS CHAR CCSID OutputRoot.Properties.CodedCharSetId ENCODING OutputRoot.MQMD.Encoding);
		
			SET TRANSACTION_UUID = UUIDASCHAR;
			INSERT INTO Database.dbo.FEDExceptions (ID,Message,Reason,DateCreated ) VALUES (TRANSACTION_UUID,T24_XML_MESSAGE,'Received XML response from T24 advice first step',CAST(CURRENT_TIMESTAMP as TIMESTAMP));
			SET TRANSACTION_UUID = UUIDASCHAR;
			INSERT INTO Database.dbo.FEDExceptions (ID,Message,Reason,DateCreated ) VALUES (TRANSACTION_UUID,T24_REPROCESS_XML_MESSAGE,'As FUNDSTransfer is not existing in the T24 response resubmitting new request to T24',CAST(CURRENT_TIMESTAMP as TIMESTAMP));
			
			PROPAGATE TO TERMINAL 'out';
			
			
			
		END IF ;
			
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
